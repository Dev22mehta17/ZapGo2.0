rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isStationManager() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'station_manager';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Stations collection
    match /stations/{stationId} {
      allow read: if true;
      allow create: if isAuthenticated(); // TEMP: allow all authenticated users to create for seeding
      allow update: if isAuthenticated() && (
        isAdmin() || 
        (isStationManager() && resource.data.managerId == request.auth.uid) ||
        // Allow users to update availableSlots when booking
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['availableSlots']))
      );
      allow delete: if isAuthenticated() && (
        isAdmin() || 
        (isStationManager() && resource.data.managerId == request.auth.uid)
      );
    }

    // Bookings collection
    match /bookings/{bookingId} {
      // Allow reading all bookings for authenticated users
      allow read: if isAuthenticated();
      
      // Allow creating bookings for authenticated users
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.status == 'confirmed' &&
        request.resource.data.paymentStatus == 'completed';
      
      // Allow updating bookings for:
      // 1. The booking owner
      // 2. The station manager of the booked station
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        resource.data.stationManagerId == request.auth.uid
      );
      
      // Allow deleting bookings for:
      // 1. The booking owner
      // 2. The station manager of the booked station
      allow delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        resource.data.stationManagerId == request.auth.uid
      );
    }
  }
} 